/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package simulacro;

public class App {
    public static void main(String[] args) {

    }


    /*
     * 1. Diseña el algoritmo y programa la función Convertir_min_sec que recibe un número entero en minutos 
     * y devuelve en entero, los segundos equivalentes. Si hay un error, devuelve -1. 
     *  Adaptado de edabit
     */
        public static int Convertir_min_sec (int minutos) {

        try {
            int tot_segundos = 0;
            final byte seg_por_min= 60;
            tot_segundos = minutos * seg_por_min;
            return tot_segundos;
        } catch (Exception e) {
            // Se colocan los errores para que aparezca lo que pongamos en erta seccion
            return -1;
        }
    }
    


     /*
     * 2. Diseña el algoritmo y programa la función Validar_iguales que recibe dos números shorts 
     * y devuelve un booleano true si son iguales, false si no lo son. Si hay un error, devuelve false también.
     *  Adaptado de edabit
     */

public static boolean Validar_iguales(short a, short b ) {
         
           try {
            boolean Son_iguales = false;
            if (b==a) 
            Son_iguales = true;
        
            else
            Son_iguales = false;

            return Son_iguales;

           } catch (Exception e) {
            return false;
           }
            
        }

    /*
     * 3. Diseña el algoritmo y programa la función Calcular_potencia que recibe en un short el voltaje y en 
     * un byte, la corriente. Devuelve en un float, la potencia (potencia = voltaje * corriente). 
     * Si hay un error, devuelve 0.
     *  Adaptado de edabit
     */
public static float Calcular_potencia (short Voltaje , byte Corriente ) {

  try {
    float Potencia = 0;
    Potencia = Voltaje * Corriente;
    return Potencia;

  } catch (Exception e) {
    // TODO: handle exception
    return 0;
  }
    
}


}
